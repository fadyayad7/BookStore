{"version":3,"sources":["components/NavBar.jsx","components/Welcome.jsx","components/Footer.jsx","components/BookList.jsx","components/Book.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","Fragment","className","to","src","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Welcome","Jumbotron","Footer","fullYear","Date","getFullYear","BookList","books","componentDidMount","getAllBooks","componentDidUpdate","axios","get","then","response","data","setState","console","log","handleDelete","book_id","delete","store","addNotification","title","message","insert","container","animationIn","animationOut","dismiss","duration","onScreen","Card","Body","Header","icon","faList","Table","striped","bordered","hover","this","length","align","colSpan","map","book","key","Image","coverPhotoURL","roundedCircle","author","isbnNumber","language","ButtonGroup","size","faEdit","Button","variant","onClick","bind","faTrash","Book","props","initialState","price","match","params","handleSubmit","e","preventDefault","put","post","catch","handleChange","target","name","value","handleReset","faPlusSquare","Form","onSubmit","onReset","Row","Group","controlId","Label","Control","required","autoComplete","onChange","placeholder","faUndo","faSave","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.fb53f3d0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NavBar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light shadow\">\r\n          <div className=\"container\">\r\n            <Link className=\"navbar-brand font-weight-bold\" to=\"/\">\r\n              <img\r\n                src={\"https://image.flaticon.com/icons/svg/746/746980.svg\"}\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top mr-1\"\r\n                alt=\"\"\r\n              ></img>\r\n              Bookstore\r\n            </Link>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div\r\n              className=\"collapse navbar-collapse\"\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item active\">\r\n                  <Link className=\"nav-link\" to=\"/add\">\r\n                    âž• Add Book\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                  <Link className=\"nav-link\" to=\"/list\">\r\n                    ðŸ“‹ Book List\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport { Jumbotron, Image } from \"react-bootstrap\";\r\nclass Welcome extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Jumbotron className=\"container mt-5 shadow bg-light text-center\">\r\n        <h1>Welcome to my Book Store ! ðŸ›’ðŸ˜Š</h1>\r\n      </Jumbotron>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nclass Footer extends Component {\r\n  state = {};\r\n  render() {\r\n      let fullYear = new Date().getFullYear();\r\n    return (\r\n      <footer className=\"page-footer font-small blue pt-4 fixed-bottom \">\r\n        <div className=\"footer-copyright text-center py-3 bg-light\">\r\n          Â© {fullYear}-{fullYear+1} Copyright:\r\n          <span className=\"font-weight-bold\"> fady.ayad</span>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Image, ButtonGroup, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faList, faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"axios\";\r\nimport { store } from \"react-notifications-component\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass BookList extends Component {\r\n  state = {\r\n    books: [],\r\n  };\r\n\r\n  //this method is invoked immedietly after a component\r\n  //is mounted(inserted into the tree)\r\n  componentDidMount = () => {\r\n    //calling this method to get all books and render them\r\n    this.getAllBooks();\r\n  };\r\n\r\n  //this method is invoked immedietly after\r\n  //updating occurs\r\n  componentDidUpdate = () => {};\r\n\r\n  //a method responsibile for getting all books from the server\r\n  getAllBooks = () => {\r\n    axios\r\n      .get(\"http://104.171.113.18:10606/api/v1/books/\")\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        this.setState({\r\n          books: data,\r\n        });\r\n        console.log(this.state.books);\r\n      });\r\n  };\r\n\r\n  //hanling delete button\r\n  handleDelete = (book_id) => {\r\n    axios\r\n      .delete(\"http://104.171.113.18:10606/api/v1/books/\" + book_id)\r\n      .then((response) => {\r\n        if (response.data != null) {\r\n          console.log(\"book deleted successfully!\");\r\n\r\n          //rerender the table\r\n          this.getAllBooks();\r\n\r\n          //show notification\r\n          store.addNotification({\r\n            title: \"Ok ! \",\r\n            message: \"Book deleted successfully\",\r\n            type: \"info\",\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n              duration: 5000,\r\n              onScreen: true,\r\n            },\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"bg-light shadow mt-5 rounded\">\r\n        <Card.Body>\r\n          <Card.Header className=\"font-weight-bold text-center\">\r\n            <FontAwesomeIcon icon={faList} /> Here is the list of Books ðŸ“šðŸ˜ƒ\r\n          </Card.Header>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>Author</th>\r\n                <th>ISBN Number</th>\r\n                <th>Language</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.books.length === 0 ? (\r\n                <tr align=\"center\">\r\n                  <td colSpan=\"6\">No Books Available ðŸ‘€</td>\r\n                </tr>\r\n              ) : (\r\n                this.state.books.map((book) => (\r\n                  <tr key={book.id}>\r\n                    <td>\r\n                      <Image\r\n                        src={book.coverPhotoURL}\r\n                        roundedCircle\r\n                        width=\"25\"\r\n                        height=\"25\"\r\n                      />{\" \"}\r\n                      {book.title}\r\n                    </td>\r\n                    <td>{book.author}</td>\r\n                    <td>{book.isbnNumber}</td>\r\n                    <td>{book.language}</td>\r\n                    <td>\r\n                      <ButtonGroup>\r\n                        <Link\r\n                          className=\"btn btn-secondary\"\r\n                          to={\"/edit/\" + book.id}\r\n                        >\r\n                          <FontAwesomeIcon\r\n                            size=\"sm\"\r\n                            icon={faEdit}\r\n                          ></FontAwesomeIcon>\r\n                        </Link>\r\n\r\n                        <Button\r\n                          variant=\"danger\"\r\n                          onClick={this.handleDelete.bind(this, book.id)}\r\n                        >\r\n                          <FontAwesomeIcon\r\n                            size=\"sm\"\r\n                            icon={faTrash}\r\n                          ></FontAwesomeIcon>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookList;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { store } from \"react-notifications-component\";\r\nimport {\r\n  faSave,\r\n  faPlusSquare,\r\n  faUndo,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass Book extends Component {\r\n  state = {};\r\n\r\n  //constructor\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  //staring the initial state\r\n  initialState = {\r\n    id: \"\",\r\n    title: \"\",\r\n    author: \"\",\r\n    coverPhotoURL: \"\",\r\n    isbnNumber: \"\",\r\n    price: \"\",\r\n    language: \"\",\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    //if id is not null then we wanna edit\r\n    const id = this.props.match.params.id;\r\n    console.log(id);\r\n    axios\r\n      .get(\"http://104.171.113.18:10606/api/v1/books/\" + id)\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        console.log(data);\r\n        this.setState(data);\r\n      });\r\n  };\r\n\r\n  //when i submit the form\r\n  handleSubmit = (e) => {\r\n    //prevent the page refreshing\r\n    e.preventDefault();\r\n\r\n    //if id not null then we wanna edit\r\n    if (this.state.id) {\r\n      axios\r\n        .put(\"http://104.171.113.18:10606/api/v1/books/\" + this.state.id, this.state)\r\n        .then(() => {\r\n          console.log(\"book edited successfullly!\");\r\n          this.setState(this.initialState);\r\n        });\r\n    } else {\r\n      //we wanna add a new book\r\n      //define the input book\r\n      const book = {\r\n        title: this.state.title,\r\n        author: this.state.author,\r\n        coverPhotoURL: this.state.coverPhotoURL,\r\n        isbnNumber: this.state.isbnNumber,\r\n        price: this.state.price,\r\n        language: this.state.language,\r\n      };\r\n\r\n      console.log(book);\r\n\r\n      //making the post request\r\n      axios\r\n        .post(\"http://104.171.113.18:10606/api/v1/books/\", book)\r\n        .then((response) => {\r\n          if (response.data != null) {\r\n            this.setState(this.initialState);\r\n            console.log(response.data);\r\n            \r\n            //alert(\"book inserted successfully!\");\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"catched error!\"); //show notification\r\n          store.addNotification({\r\n            title: \"OPS â˜¹,   Book not saved !\",\r\n            message: \"Something went wrong ! \",\r\n            type: \"danger\",\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animated\", \"bounceIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n              duration: 5000,\r\n              onScreen: true,\r\n            },\r\n          });\r\n        });\r\n    }\r\n\r\n    //show notification\r\n    store.addNotification({\r\n      title: \"OK ! ðŸ˜€\",\r\n      message: this.state.id\r\n        ? \"Book updated successfully\"\r\n        : \"Book inserted successfully\",\r\n      type: \"success\",\r\n      insert: \"top\",\r\n      container: \"top-right\",\r\n      animationIn: [\"animated\", \"bounceIn\"],\r\n      animationOut: [\"animated\", \"fadeOut\"],\r\n      dismiss: {\r\n        duration: 5000,\r\n        onScreen: true,\r\n      },\r\n    });\r\n\r\n    //logging the values\r\n    console.log(\r\n      \"title: \",\r\n      this.state.title,\r\n      \"author: \",\r\n      this.state.author,\r\n      \"coverUrl: \",\r\n      this.state.coverPhotoURL,\r\n      \"isbn: \",\r\n      this.state.isbnNumber,\r\n      \"price: \",\r\n      this.state.price,\r\n      \"language: \",\r\n      this.state.language\r\n    );\r\n  };\r\n\r\n  //when the values in the form change\r\n  handleChange = (e) => {\r\n    //console.log(e.target.name, \" \", e.target.value);\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //handling clear method\r\n  handleReset = () => {\r\n    this.setState(() => this.initialState);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      author,\r\n      coverPhotoURL,\r\n      isbnNumber,\r\n      price,\r\n      language,\r\n    } = this.state;\r\n    return (\r\n      <Card className=\"rounded shadow mt-5 bg-light\">\r\n        <Card.Header className=\"font-weight-bold text-center\">\r\n          <FontAwesomeIcon icon={faPlusSquare} /> Let's add a new Book ðŸ“š ðŸ¤—\r\n        </Card.Header>\r\n        <Form\r\n          className={\"font-weight-bold\"}\r\n          onSubmit={this.handleSubmit}\r\n          onReset={this.handleReset}\r\n        >\r\n          <Card.Body>\r\n            <Form.Row className=\"row\">\r\n              <Form.Group controlId=\"formBasicEmail\" className=\"col\">\r\n                <Form.Label>Title :</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  autoComplete=\"off\"\r\n                  value={title}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  placeholder=\"Enter Book title\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicEmail\" className=\"col\">\r\n                <Form.Label>Author :</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  autoComplete=\"off\"\r\n                  value={author}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"author\"\r\n                  placeholder=\"Enter Book Author\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"row\">\r\n              <Form.Group controlId=\"formBasicEmail\" className=\"col\">\r\n                <Form.Label>Cover Photo Url :</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  autoComplete=\"off\"\r\n                  value={coverPhotoURL}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"coverPhotoURL\"\r\n                  placeholder=\"cover photo\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicEmail\" className=\"col\">\r\n                <Form.Label>ISBN number :</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  autoComplete=\"off\"\r\n                  value={isbnNumber}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"isbnNumber\"\r\n                  placeholder=\"Enter ISBN number\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"row\">\r\n              <Form.Group controlId=\"formBasicEmail\" className=\"col\">\r\n                <Form.Label>Price :</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  autoComplete=\"off\"\r\n                  value={price}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"price\"\r\n                  placeholder=\"Enter Price\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicEmail\" className=\"col\">\r\n                <Form.Label>Language :</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  autoComplete=\"off\"\r\n                  value={language}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"language\"\r\n                  placeholder=\"Enter the language\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Card.Body>\r\n          <Card.Footer className=\"text-right\">\r\n            <Link className=\"btn btn-info mr-2\" to=\"/list\">\r\n              ðŸ“‹ Book List\r\n            </Link>\r\n            <Button variant=\"secondary\" type=\"reset\">\r\n              <FontAwesomeIcon icon={faUndo} /> Reset\r\n            </Button>\r\n            <Button variant=\"success\" type=\"submit\" className=\"ml-2\">\r\n              <FontAwesomeIcon icon={faSave} />{\" \"}\r\n              {this.state.id ? \"Update\" : \"Save\"}\r\n            </Button>\r\n          </Card.Footer>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport NavBar from \"./components/NavBar\";\nimport Welcome from \"./components/Welcome\";\nimport Footer from \"./components/Footer\";\nimport BookList from \"./components/BookList\";\nimport Book from \"./components/Book\";\nimport {BrowserHistory as Router, Switch, Route } from \"react-router-dom\";\nimport { HashRouter } from 'react-router-dom';\n\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <HashRouter>\n        <NavBar></NavBar>\n        <div className=\"app-container\">\n          <ReactNotification />\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/\" exact component={Welcome}></Route>\n              <Route path=\"/add\" exact component={Book}></Route>\n              <Route path=\"/edit/:id\" exact component={Book}></Route>\n              <Route path=\"/list\" exact component={BookList}></Route>\n            </Switch>\n          </div>\n        </div>\n        <Footer></Footer>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}